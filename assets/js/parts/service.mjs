import{regDate,regInt,regReal,SPLITER}from"../parts/tools.mjs";import{AutoInput}from"../parts/autocomplete.mjs";import{table_data,table_init,fetch_table}from"../parts/table.mjs";import{notifier}from"./notifier.mjs";import{alert_confirm}from"./alert.mjs";export var table_fields;export function build_table_header(table_container,custom_fields,table_fields,last_fields,table_name){let all_width=0;for(let item of custom_fields)all_width+=item.width;if(last_fields)for(let item of last_fields)all_width+=item.width;for(let item of table_fields)all_width+=item.show_width;let table_width=table_container.clientWidth,width_raio=table_width/all_width,row="";if(width_raio<18){for(let item of custom_fields)row+=`<th width='${18*item.width}px'>${item.name}</th>`;table_container.style.width=table_width,table_container.querySelector(".table-ctrl").style.cssText=`\n            position: absolute;\n            width: ${table_width+2}px;\n            margin-top: 11px;\n            border: 1px solid #edf5fb;\n            margin-left: -2px;`}else for(let item of custom_fields)row+=`<th width='${100*item.width/all_width}%'>${item.name}</th>`;let header_names={};for(let th of custom_fields)header_names[th.name]=th.field;for(let th of table_fields)row+=width_raio>18?`<th width="${(100*th.show_width/all_width).toFixed(1)}%">${th.show_name}</th>`:`<th width="${18*th.show_width}px">${th.show_name}</th>`,header_names[th.show_name]=`${table_name}.${th.field_name}`;if(last_fields)for(let item of last_fields)row+=width_raio<18?`<th width='${18*item.width}px'>${item.name}</th>`:`<th width='${100*item.width/all_width}%'>${item.name}</th>`,header_names[item.name]=item.field;return{th_row:row,header_names:header_names}}export function calc_weight(data){let tech,cz=data.cz.trim();tech="718"==cz?1.05:"17-4"==cz||"Super13Cr"==cz?1.0064:1;let weight=0;if("圆钢"==data.name)weight=data.gg*data.gg*.00617*data.long*data.num*tech/1e3;else{let pipe=data.gg.split("*");weight=.02466*pipe[1]*(pipe[0]-pipe[1])*data.long*data.num*tech/1e3}return weight.toFixed(1)}export function build_save_header(all_values,table_fields){let n=0,save_str="";for(let f of table_fields){if("文本"==f.data_type)save_str+=`${all_values[n].value}${SPLITER}`;else if("整数"==f.data_type||"实数"==f.data_type){save_str+=`${all_values[n].value?all_values[n].value:0}${SPLITER}`}else save_str+=`${all_values[n].checked?"是":"否"}${SPLITER}`;n++}return save_str}export function build_save_items(n,row,show_names){let save_str="",len=show_names.length;for(let i=n;i<len;i++)if(show_names[i].is_save)if("autocomplete"==show_names[i].type&&show_names[i].save&&"id"!=show_names[i].save){save_str+=`${row.querySelector(`.${show_names[i].class}`).value}${SPLITER}`}else if("autocomplete"==show_names[i].type){save_str+=`${row.querySelector(`.${show_names[i].class}`).getAttribute("data").split(SPLITER)[0]}${SPLITER}`}else if("普通输入"==show_names[i].type||"下拉列表"==show_names[i].type){let value=row.querySelector(`.${show_names[i].class}`).value;value||(value=row.querySelector(`.${show_names[i].class}`).textContent),save_str+=`${value.trim()}${SPLITER}`}else{save_str+=`${row.querySelector(`.${show_names[i].class}`).checked?"是":"否"}${SPLITER}`}return save_str}export function set_sumit_shen(){let sumit_shen=document.createElement("Button");sumit_shen.setAttribute("id","sumit-shen"),sumit_shen.classList.add("btn-info"),sumit_shen.classList.add("btn"),sumit_shen.classList.add("btn-sm"),sumit_shen.classList.add("button-shen"),sumit_shen.textContent="提交审核",document.querySelector(".fields-show").appendChild(sumit_shen)}export function make_formal(data){return"已审核"!=data.button.textContent.trim()&&("新单据"==data.dh||data.edited?(notifier.show("请先保存单据","danger"),!1):document.querySelector("#sumit-shen")&&"提交审核"==document.querySelector("#sumit-shen").textContent?(notifier.show("该单还未提交审核","danger"),!1):void alert_confirm("确认审核吗？",{confirmText:"确认",cancelText:"取消",confirmCallBack:()=>{fetch("/make_formal",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({cate:data.document_name,dh:data.dh})}).then((response=>response.json())).then((content=>{data.after_shen_fun&&data.after_shen_fun(),-1!=content?(data.button.textContent="已审核",data.button.classList.add("remembered"),"function"==typeof data.readonly_fun&&data.readonly_fun(),notifier.show("审核完成","success")):notifier.show("权限不够","danger")}))}}))}export function sumit_shen(data){return"已提审核"!=data.button.textContent&&("新单据"==data.dh||data.edited?(notifier.show("请先保存单据","danger"),!1):void alert_confirm("确认提交审核吗？",{confirmText:"确认",cancelText:"取消",confirmCallBack:()=>{fetch("/make_sumit_shen",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({cate:data.document_name,dh:data.dh})}).then((response=>response.json())).then((content=>{-1!=content?(data.button.textContent="已提审核",data.button.classList.add("remembered"),notifier.show("提交完成","success")):notifier.show("权限不够","danger")}))}}))}export function set_shens_owner(data){let values=data.content.split(SPLITER),len=values.length;document.querySelector("#owner").textContent=`[ ${values[len-1]} ]`,only_worker(values[len-1],data.readonly_fun);let shen=document.querySelector("#sumit-shen");"true"==values[len-5]?(shen.textContent="已提审核",shen.classList.add("remembered")):(shen.textContent="提交审核",shen.classList.remove("remembered"));let rem=document.querySelector("#remember-button");""!=values[len-2]?(rem.textContent="已审核",rem.classList.add("remembered"),data.readonly_fun()):(rem.textContent="审核",rem.classList.remove("remembered")),"审核"==rem.textContent&&data.focus_fun&&"function"==typeof data.focus_fun&&data.focus_fun()}export function edit_button_disabled(){document.querySelector("#row-insert").disabled=!0,document.querySelector("#row-del").disabled=!0,document.querySelector("#row-up").disabled=!0,document.querySelector("#row-down").disabled=!0}export function only_worker(worker,set_readonly){if(-1==document.querySelector("#user-name").textContent.indexOf(worker)){set_readonly();let all_edit=document.querySelectorAll(".fields-show input");for(let edit of all_edit)edit.disabled=!0;document.querySelector("#save-button").disabled=!0}}export function header_error_check(document_table_fields,all_rows){if(!regDate.test(document.querySelector("#日期").value))return notifier.show("日期输入错误","danger"),!1;let all_values=document.querySelectorAll(".document-value");for(let i=0;i<document_table_fields.length;i++)if("整数"==document_table_fields[i].data_type){if(all_values[i].value&&!regInt.test(all_values[i].value))return notifier.show(`${document_table_fields[i].show_name}输入错误`,"danger"),!1}else if("实数"==document_table_fields[i].data_type&&all_values[i].value&&!regReal.test(all_values[i].value))return notifier.show(`${document_table_fields[i].show_name}输入错误`,"danger"),!1;return 0!=all_rows.length||(notifier.show("表格不能为空","danger"),!1)}export function build_row_from_string(rec,row,table_fields,n){n||(n=2);for(let name of table_fields)"文本"==name.data_type?row+=`<td title='${rec[n]}'>${rec[n]}</td>`:("整数"==name.data_type||name.data_type,row+=`<td>${rec[n]}</td>`),n++;return row+="</tr>"}export function build_blank_from_fields(row,table_fields){for(let _f of table_fields)row+="<td></td>";return row+="</tr>"}export function build_edit_form(num,table_fields,chosed){let form="<form>";for(let name of table_fields){let control;if("普通输入"==name.ctr_type){let value=chosed.querySelector(`td:nth-child(${num})`).textContent;control=`<div class="form-group">\n                            <div class="form-label">\n                                <label>${name.show_name}</label>\n                            </div>\n                            <input class="form-control input-sm has-value" type="text" value="${value}">\n                        </div>`}else if("二值选一"==name.ctr_type){let check=chosed.querySelector(`td:nth-child(${num})`).textContent==name.option_value.split("_")[0]?"checked":"";control=`<div class="form-group">\n                            <div class="form-label">                                    \n                                <label>${name.show_name}</label>\n                            </div>\n                            <label class="check-radio"><input class="has-value" type="checkbox" ${check}><span class="checkmark"></span>\n                            </label>\n                        </div>`}else{let show_value=chosed.querySelector(`td:nth-child(${num})`).textContent;control=`<div class="form-group">\n                            <div class="form-label">                                    \n                                <label>${name.show_name}</label>\n                            </div>\n                            <select class='select-sm has-value'>`;let options=name.option_value.split("_");for(let value of options)control+=value==show_value?`<option value="${value}" selected>${value}</option>`:`<option value="${value}">${value}</option>`;control+="</select></div>"}form+=control,num++}return form+="</form>",form}export function build_add_form(table_fields){let form="<form>";for(let name of table_fields){let control;if("普通输入"==name.ctr_type)control=`<div class="form-group">\n                                <div class="form-label">\n                                    <label>${name.show_name}</label>\n                                </div>\n                                <input class="form-control input-sm has-value" type="text">\n                            </div>`;else if("二值选一"==name.ctr_type){let checked=name.option_value.split("_")[0]==name.default_value?"checked":"";control=`<div class="form-group">\n                                <div class="form-label">                                    \n                                    <label>${name.show_name}</label>\n                                </div>\n                                <label class="check-radio">\n                                    <input class="has-value" type="checkbox" ${checked}>\n                                    <span class="checkmark"></span>\n                                </label>\n                            </div>`}else{control=`<div class="form-group">\n                                <div class="form-label">                                    \n                                    <label>${name.show_name}</label>\n                                </div>\n                                <select class='select-sm has-value'>`;let options=name.option_value.split("_");for(let value of options){control+=`<option value="${value}" ${value==name.default_value?"selected":""}>${value}</option>`}control+="</select></div>"}form+=control}return form+="</form>",form}export function build_inout_form(table_fields,data){let values=data?data.split(SPLITER):"",form="",idx_n=1,n=0;for(let name of table_fields){let control,id=`id="${name.field_name}"`,value=values?values[n]:"";if("普通输入"==name.ctr_type)value="0"===value?"":value,control=`<div class="form-group">\n                                <div class="form-label">\n                                    <label>${name.show_name}</label>\n                                </div>\n                                <div class="form-input">\n                                    <input class="form-control input-sm document-value" value='${value}' idx="${idx_n++}" type="text" ${id}\n                                        style="width: ${20*name.show_width}px;" />\n                                </div>\n                            </div>`;else if("二值选一"==name.ctr_type){let has_value=value||name.default_value,checked=name.option_value.split("_")[0]==has_value?"checked":"";control=`<div class="form-group" style="display: flex;">\n                                <div class="form-label">                                    \n                                    <label class='check-label' for='${name.show_name}'>${name.show_name}</label>\n                                </div>\n                                <label class="check-radio">\n                                    <input class="document-value" id='${name.show_name}' type="checkbox"  idx="${idx_n++}" ${id} ${checked}>\n                                    <span class="checkmark"></span>\n                                </label>\n                            </div>`}else{control=`<div class="form-group">\n                                <div class="form-label">                                    \n                                    <label>${name.show_name}</label>\n                                </div>\n                                <select class='select-sm document-value' style="width: ${20*name.show_width}px;" ${id}>`;let options=name.option_value.split("_"),has_value=value||name.default_value;for(let value of options){control+=`<option value="${value}" ${value==has_value?"selected":""}>${value}</option>`}control+="</select></div>"}form+=control,n++}return form}export function build_product_table(row_num,cb,more){let init_data={container:".table-product",url:"/fetch_product",post_data:{id:"",name:"",sort:"products.文本字段1 ASC",rec:row_num,cate:""},edit:!1,row_fn:function(tr){let rec=tr.split(SPLITER),row=`<tr><td>${rec[1]}</td><td hidden>${rec[0]}</td>`;return build_row_from_string(rec,row,table_fields).replace("</tr>",`<td>${rec[rec.length-2]}</td></tr>`)},blank_row_fn:function(){return build_blank_from_fields("<tr><td></td><td></td>",table_fields)}};fetch("/fetch_fields",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:"商品规格"})}).then((response=>response.json())).then((content=>{if(-1!=content){table_fields=content[0].filter((item=>item.is_show));let table=document.querySelector(".table-product"),header=build_table_header(table,[{name:"序号",width:3}],table_fields,"","products");table.querySelector("thead tr").innerHTML=header.th_row,init_data.header_names=header.header_names,init_data.header_names["编号"]="id",init_data.header_names["库存长度"]="products.整数字段3-COALESCE(长度合计,0)-COALESCE(切分次数,0)*2",init_data.header_names["切分"]="COALESCE(切分次数,0)",init_data.header_names["理论重量"]="库存下限-COALESCE(理重合计,0)",table_init(init_data),fetch_table();let post_data={page:1};Object.assign(table_data.post_data,post_data)}})),document.querySelector("#serach-button").addEventListener("click",(function(){!function(){let search=document.querySelector("#search-input").value;if(Object.assign(table_data.post_data,{name:search,page:1}),"function"==typeof cb){let table=document.querySelector(".table-product");fetch_table((()=>{cb(table)}))}else fetch_table()}()}))}export function get_materials_docs(url,cate,build_func){fetch(url,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(cate)}).then((response=>response.json())).then((content=>{let tr="";content.forEach((obj=>{tr+=`<tr><td>${obj.label}</td></tr>`})),document.querySelector(".table-docs tbody").innerHTML=tr;let lines=document.querySelectorAll(".table-docs tbody tr");for(let l of lines)l.addEventListener("dblclick",(()=>{if("已审核"==document.querySelector("#remember-button").textContent||1==document.querySelector("#save-button").disabled)return!1;let dh=l.querySelector("td:nth-child(1)").textContent.split("　")[0];document.querySelector("#文本字段6").value=dh,build_func(dh),lines.forEach((l=>{l.classList.remove("has-bak")})),l.classList.add("has-bak")}))}))}export function set_date(){let date1=document.querySelector("#search-date1"),date2=document.querySelector("#search-date2");var dateTime=new Date;let d1=dateTime.setDate(dateTime.getDate()-30);date1.value=new Date(d1).Format("yyyy-MM-dd"),date2.value=(new Date).Format("yyyy-MM-dd"),laydate.render({elem:date1,showBottom:!1}),laydate.render({elem:date2,showBottom:!1})}