class CartManager{constructor(){this.cartCount=0,this.cartMaterials=[],this.isLoading=!1,this.lang=localStorage.getItem("language")||"zh",this.animationController=new AnimationController,this.texts={zh:{addToCart:"添加到购物车",addSuccess:"商品已添加到购物车",addError:"添加失败，请重试",networkError:"网络连接失败",serverError:"服务器错误",loginRequired:"请先登录",alreadyInCart:"商品已在购物车中"},en:{addToCart:"Add to Cart",addSuccess:"Item added to cart",addError:"Failed to add, please try again",networkError:"Network connection failed",serverError:"Server error",loginRequired:"Please login first",alreadyInCart:"Item already in cart"}}}async init(){try{await this.getCartMaterials(),this.initCartUI(),this.bindEventListeners(),this.highlightCartItems()}catch(error){console.error("Failed to initialize CartManager:",error)}}initCartUI(){this.updateCartDisplay(this.cartCount),this.bindCartIconEvents()}bindCartIconEvents(){const cartContainer=document.querySelector("#shopping-cart");cartContainer&&cartContainer.addEventListener("click",(()=>{console.log("购物车被点击，当前商品数量:",this.cartCount)}))}bindEventListeners(){document.addEventListener("click",(e=>{if(e.target.closest(".btn-add-cart")){e.preventDefault(),e.stopPropagation();const button=e.target.closest(".btn-add-cart"),materialNumber=button.getAttribute("data-material");materialNumber&&!this.isLoading&&this.addToCart(materialNumber,button)}}))}async addToCart(materialNumber,buttonElement){if(!this.isLoading)try{this.isLoading=!0,this.setButtonLoading(buttonElement,!0),this.animationController.playButtonFeedback(buttonElement);const response=await fetch("/stock/add_to_cart",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:Number(document.querySelector("#user-id").textContent.trim()),material_number:materialNumber})}),result=await response.json();if(response.ok&&result.success){this.cartCount=result.cart_count||this.cartCount+1,this.cartMaterials.includes(materialNumber)||this.cartMaterials.push(materialNumber);const cartIcon=document.querySelector("#shopping-cart");cartIcon&&await this.animationController.playFlyAnimation(buttonElement,cartIcon),this.updateCartDisplay(this.cartCount);const cartBadge=document.querySelector("#cart-count");cartBadge&&this.animationController.playCountAnimation(cartBadge),this.highlightCartItems(),notifier.show(result.message||this.texts[this.lang].addSuccess,"success",3e3)}else this.handleAddError(result,response.status)}catch(error){console.error("Add to cart error:",error),this.handleNetworkError()}finally{this.isLoading=!1,this.setButtonLoading(buttonElement,!1)}}handleAddError(result,status){let message=this.texts[this.lang].addError;401===status?(message=this.texts[this.lang].loginRequired,setTimeout((()=>{window.location.href="/"}),2e3)):409===status?message=this.texts[this.lang].alreadyInCart:result.message&&(message=result.message),notifier.show(message,"danger",4e3)}handleNetworkError(){notifier.show(this.texts[this.lang].networkError,"danger",4e3)}setButtonLoading(button,loading){if(loading){button.disabled=!0,button.classList.add("loading");const icon=button.querySelector("i");icon&&(icon.className="fa fa-spinner fa-spin")}else{button.disabled=!1,button.classList.remove("loading");const icon=button.querySelector("i");icon&&(icon.className="fa fa-plus")}}updateCartDisplay(count){const cartBadge=document.querySelector("#cart-count");cartBadge&&(this.cartCount=count,count>0?(cartBadge.textContent=count,cartBadge.style.display="flex"):cartBadge.style.display="none")}async getCartMaterials(){try{const response=await fetch("/stock/get_cart_materials",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:Number(document.querySelector("#user-id").textContent.trim())})});if(response.ok){const result=await response.json();return this.cartMaterials=result.materials||[],this.cartCount=result.count||0,{materials:this.cartMaterials,count:this.cartCount}}return console.warn("Failed to get cart materials:",response.status),this.cartMaterials=[],this.cartCount=0,{materials:[],count:0}}catch(error){return console.error("Error getting cart materials:",error),this.cartMaterials=[],this.cartCount=0,{materials:[],count:0}}}async getCartCount(){try{const response=await fetch("/stock/get_cart_count",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:Number(document.querySelector("#user-id").textContent.trim())})});if(response.ok){const result=await response.json();return this.cartCount=result.count||0,this.cartCount}return console.warn("Failed to get cart count:",response.status),0}catch(error){return console.error("Error getting cart count:",error),0}}getCurrentCount(){return this.cartCount}getCurrentMaterials(){return this.cartMaterials}highlightCartItems(){if(!this.cartMaterials||0===this.cartMaterials.length)return;document.querySelectorAll(".table-container tbody tr").forEach((row=>{const materialCell=row.querySelector(".物料号");if(materialCell){const materialNumber=materialCell.textContent.trim();if(this.cartMaterials.includes(materialNumber)){row.classList.add("cart-item-highlight");const actionCell=row.querySelector("td:last-child");if(actionCell&&!actionCell.querySelector(".cart-indicator")){const indicator=document.createElement("span");indicator.className="cart-indicator",indicator.innerHTML='<i class="fa fa-shopping-cart" style="color: #007bff; margin-left: 5px;"></i>',actionCell.appendChild(indicator)}}else{row.classList.remove("cart-item-highlight");const indicator=row.querySelector(".cart-indicator");indicator&&indicator.remove()}}}))}clearHighlights(){document.querySelectorAll(".cart-item-highlight").forEach((row=>{row.classList.remove("cart-item-highlight");const indicator=row.querySelector(".cart-indicator");indicator&&indicator.remove()}))}reset(){this.cartCount=0,this.isLoading=!1,this.updateCartDisplay(0)}}class AnimationController{constructor(){this.animationDuration=1e3,this.isAnimating=!1,this.prefersReducedMotion=window.matchMedia("(prefers-reduced-motion: reduce)").matches}async playFlyAnimation(fromElement,toElement){return this.prefersReducedMotion?Promise.resolve():new Promise((resolve=>{try{const flyElement=this.createFlyElement(),fromRect=fromElement.getBoundingClientRect(),toRect=toElement.getBoundingClientRect(),fromCenterX=fromRect.left+fromRect.width/2,fromCenterY=fromRect.top+fromRect.height/2,toCenterX=toRect.left+toRect.width/2,toCenterY=toRect.top+toRect.height/2;flyElement.style.left=fromCenterX+"px",flyElement.style.top=fromCenterY+"px",document.body.appendChild(flyElement),flyElement.offsetHeight;const deltaX=toCenterX-fromCenterX,deltaY=toCenterY-fromCenterY;flyElement.style.transform=`translate(${deltaX}px, ${deltaY}px) scale(0.3) rotate(360deg)`,flyElement.style.opacity="0",setTimeout((()=>{flyElement.parentNode&&flyElement.parentNode.removeChild(flyElement),resolve()}),this.animationDuration)}catch(error){console.error("Animation error:",error),resolve()}}))}createFlyElement(){const element=document.createElement("div");return element.className="cart-fly-item",element.innerHTML='<i class="fa fa-cube"></i>',element.style.cssText=`\n            position: fixed;\n            z-index: 9999;\n            pointer-events: none;\n            font-size: 16px;\n            color: #007bff;\n            transition: all ${this.animationDuration}ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n            transform: scale(1) rotate(0deg);\n            opacity: 1;\n            margin-left: -8px;\n            margin-top: -8px;\n        `,element}playCountAnimation(element){!this.prefersReducedMotion&&element&&(element.classList.remove("cart-count-animate"),element.offsetHeight,element.classList.add("cart-count-animate"),setTimeout((()=>{element.classList.remove("cart-count-animate")}),600))}playButtonFeedback(buttonElement){!this.prefersReducedMotion&&buttonElement&&(buttonElement.classList.remove("btn-clicked"),buttonElement.offsetHeight,buttonElement.classList.add("btn-clicked"),setTimeout((()=>{buttonElement.classList.remove("btn-clicked")}),200))}playLoadingAnimation(element,show){element&&(show?element.classList.add("loading"):element.classList.remove("loading"))}playSuccessAnimation(element){if(this.prefersReducedMotion||!element)return;const successElement=document.createElement("div");successElement.className="cart-success-indicator",successElement.innerHTML='<i class="fa fa-check"></i>',successElement.style.cssText="\n            position: absolute;\n            top: -10px;\n            right: -10px;\n            background-color: #28a745;\n            color: white;\n            border-radius: 50%;\n            width: 20px;\n            height: 20px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 12px;\n            z-index: 10;\n            animation: successPop 1s ease-out forwards;\n        ";const parent=element.closest("td")||element.parentNode;parent&&(parent.style.position="relative",parent.appendChild(successElement),setTimeout((()=>{successElement.parentNode&&successElement.parentNode.removeChild(successElement)}),1e3))}setReducedMotion(reduced){this.prefersReducedMotion=reduced}}"undefined"!=typeof module&&module.exports&&(module.exports={CartManager:CartManager,AnimationController:AnimationController});